clear;
close all;
clc;


%% Preliminaire 1

%Parametres
R1 = 0.98;
teta1 = 6*pi/15;

R2 = 0.98;
teta2 = 5*pi/15;

N = 5000;

%Definition des poles
p1 = R1*exp(j*teta1);
p2 = R1*exp(-j*teta1);
p3 = R2*exp(j*teta2);
p4 = R2*exp(-j*teta2);

%Definition des parametres AR
a1 = -p1-p2-p3-p4;
a2 = p3*p4+(-p1-p2)*(-p3-p4)+p1*p2;
a3 = p3*p4*(-p1-p2)+p1*p2*(-p3-p4);
a4 = p1*p2*p3*p4;

%Creation vecteurs zeros et poles
zeros = [1 0];
poles = [1 a1 a2 a3 a4];



%Creation du processus AR (filtrage d un BBGC)
m = 0;
sigmacarre = 1;
bruit = sqrt(sigmacarre)*randn(1,N);
AR_process = filter(zeros, poles, bruit);

f = -1/2:1/N:1/2-1/N;
h = freqz(zeros, poles, 2*pi*f);

%% Representation temporelle

t = 0: 1/N :1-1/N;
figure;
subplot(2,1,1);
plot(t,bruit)
title('Représentation temporelle du bruit avant filtre');
xlabel('temps');
subplot(2,1,2);
plot(t,AR_process);
title('Représentation temporelle du AR');
xlabel('temps');


%% SPECTRE DE PUISSANCE

TF_AR = fftshift(fft(AR_process));
SP_AR = (1/N)*abs(TF_AR).^2;

TF_bruit = fftshift(fft(bruit));
SP_bruit = (1/N)*abs(TF_bruit).^2;


figure;
subplot(2,1,1);
plot(f,SP_AR)
title('Spectre de puissance du AR');
xlabel('frequence normalisée');
subplot(2,1,2);
plot(f,SP_bruit)
title('Spectre de puissance du bruit avant filtrage');
xlabel('frequence normalisée');

%% DENSITE SPECTRALE DE PUISSANCE

figure;
plot(f,SP_AR)
hold on;
plot(f, abs(h).^2*sigmacarre,'r','LineWidth',2)
xlabel('frequence normalisée');
title('DSP et Spectre de puissance du processus AR');
legend('Spectre de puissance AR','DSP AR');


%% Preliminaire 2

%% Bruit additif

RSB = 10; %rapport signal sur bruit
Eb = sum(abs(AR_process).^2); % Energie du filtre 

bruit_init = randn(1,N);
eb_n0 = sum(abs(bruit_init).^2);% Energie du bruit
N0 = Eb/(10^(RSB/10)*eb_n0);

bruit_additif = sqrt(N0/2)*bruit_init;

AR_bruite = AR_process + bruit_additif; % bruitage du processus AR


TF_AR_bruite = fftshift(fft(AR_bruite));
SP_AR_bruite = (1/N)*abs(TF_AR_bruite).^2;%Spectre de puissance du processus AR




%% Representation temporelle / Spectre / DSP du AR bruite

t = 0: 1/N :1-1/N;
figure;
subplot(2,1,1);
plot(f,SP_AR_bruite)
xlabel('frequence normalisée');
legend('Spectre de puissance AR','DSP AR');
subplot(2,1,2);
plot(t,AR_bruite);
xlabel('temps');
ylabel('Representation temporelle AR bruité');


%% Estimation des parametres AR

p = 4;
tab_ap = estimation_ap(AR_process,p); %tableau contenant les parametres estimes

%% Parametres altern

%% Visualisation des coefficients P(z) et Q(z)

poles_Pz = [1 0];
zeros_Pz = [1 a1+a4 a2+a3 a3+a2 a4+a1 1];

zeros_Qz = [1 a1-a4 a2-a3 a3-a2 a4-a1 1];

figure;
zplane(zeros_Pz,poles_Pz)
